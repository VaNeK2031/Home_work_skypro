import pytest

#фикстура с корректным номером карты
@pytest.fixture
def valid_card():
    """Возвращает корректный номер карты."""
    return "1234567890123456"

#фикстура с параметризацией для различных корректных номеров карт
@pytest.fixture
def other_valid_cards():
    """Возвращает список других корректных номеров карт и ожидаемых результатов."""
    return [
        ("0000000000000001", "0000 00** **** 0001"),
        ("1111222233334444", "1111 22** **** 4444"),
        ("7777666655554444", "7777 66** **** 4444"),
    ]

#фикстура с некорректными номерами карты
@pytest.fixture
def invalid_card_inputs():
    return [
        "123",                   # слишком короткий
        "12345678901234567",     # слишком длинный
        "1234-5678-9012-3456",   # содержит символы
        "abcdabcdabcdabcd",      # только буквы
        "12a456b890c23d56",      # смешанные буквы и цифры
        "",                      # пустая строка
        " ",                     # пробел
    ]

## Фикстура, возвращающая корректный номер счета
@pytest.fixture
def valid_account_number():
    return "1234567890"


# Фикстура, возвращающая короткий номер счета
@pytest.fixture
def short_account_number():
    return "123"


# Фикстура, возвращающая некорректный (с буквами) номер счета
@pytest.fixture
def invalid_account_number():
    return "12a4"


#Корректные входные данные
@pytest.fixture:
def valid_data_inputs():
    return [
        # Карта
        ("Visa Platinum 7000792289606361", "Visa Platinum 7000 79** **** 6361"),
        ("MasterCard 1234567890123456", "MasterCard 1234 56** **** 3456"),
        ("Maestro 1596837159422896", "Maestro 1596 83** **** 2896"),

        # Счёт
        ("Счет 73654108430135874305", "Счет **4305"),
        ("Счет 12345678901234567890", "Счет **7890"),
    ]

